{"ast":null,"code":"var _jsxFileName = \"/home/dinho/backend_site/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Formulario from \"./formulario/Formulario\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //objeto SSD\n  const ssd = {\n    brand: '',\n    model: '',\n    serialNumber: '',\n    size: '',\n    purchasePrice: '',\n    purchaseDate: '',\n    saleValue: '',\n    arrivalDate: ''\n  };\n  // UseState = cria  um objeto de maneira dinâmica\n  const [btnCadastrar, setBtnCadastrar] = useState(true);\n  const [ssds, setSsds] = useState([]);\n  const [objetoSsd, setObjetoSsd] = useState(ssd);\n\n  // UseEffect\n  useEffect(() => {\n    fetch(\"http://localhost:9090/ssd/list\").then(retorno => retorno.json()).then(retorno_convertido => setSsds(retorno_convertido));\n  }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n  //pegando os dados do formulário\n\n  //setState\n  const aoDiditar = e => {\n    setObjetoSsd({\n      ...objetoSsd,\n      [e.target.brand]: e.target.value\n    });\n  };\n  //para editar o objeto\n\n  const cadastrar = () => {\n    console.log(\"testee\");\n    fetch(\"http://localhost:9090/ssd/new\", {\n      method: \"post\",\n      body: JSON.stringify(objetoSsd),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(retorno => retorno.json()).then(retorno_convertido => {\n      if (retorno_convertido.mensagem !== undefined) {\n        alert(retorno_convertido.mensagem);\n      } else {\n        setProdutos([...produtos, retorno_convertido]);\n        alert(\"Produto cadastrado com sucesso!\");\n        limparFormulario();\n      }\n    });\n  };\n\n  // Retorno\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cadastro de produtos: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(objetoSsd)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      botao: btnCadastrar,\n      eventoTeste: aoDiditar,\n      obj: objetoSsd,\n      cadastrar: cadastrar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      vetor: ssds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DvN44PFu7FRaHnssjiXGRyQWs+U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Formulario","List","useEffect","useState","App","ssd","brand","model","serialNumber","size","purchasePrice","purchaseDate","saleValue","arrivalDate","btnCadastrar","setBtnCadastrar","ssds","setSsds","objetoSsd","setObjetoSsd","fetch","then","retorno","json","retorno_convertido","aoDiditar","e","target","value","cadastrar","console","log","method","body","JSON","stringify","headers","Accept","mensagem","undefined","alert","setProdutos","produtos","limparFormulario"],"sources":["/home/dinho/backend_site/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Formulario from \"./formulario/Formulario\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\n//objeto SSD\nconst ssd = {\n  brand: '',\n  model : '',\n  serialNumber : '',\n  size : '',\n  purchasePrice :'',\n  purchaseDate : '',\n  saleValue : '',\n  arrivalDate :''\n \n}\n  // UseState = cria  um objeto de maneira dinâmica\n  const [btnCadastrar, setBtnCadastrar] = useState(true);\n  const [ssds, setSsds] = useState([]);\n  const [objetoSsd, setObjetoSsd] = useState(ssd);  \n\n  // UseEffect\n  useEffect(() => {\n    fetch(\"http://localhost:9090/ssd/list\")\n      .then((retorno) => retorno.json())\n      .then((retorno_convertido) => setSsds(retorno_convertido));\n  }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n//pegando os dados do formulário\n\n//setState\nconst aoDiditar = (e) => {\n    setObjetoSsd({\n      ...objetoSsd,\n      [e.target.brand]:e.target.value});\n  }\n  //para editar o objeto\n\n\nconst cadastrar = () => {\n  console.log(\"testee\");\n  fetch(\"http://localhost:9090/ssd/new\", {\n    method: \"post\",\n    body: JSON.stringify(objetoSsd),\n    headers: {\n      \"Content-type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  })\n    .then((retorno) => retorno.json())\n    .then((retorno_convertido) => {\n      if (retorno_convertido.mensagem !== undefined) {\n        alert(retorno_convertido.mensagem);\n      } else {\n        setProdutos([...produtos, retorno_convertido]);\n        alert(\"Produto cadastrado com sucesso!\");\n        limparFormulario();\n      }\n    });\n};\n\n\n\n  // Retorno\n  return (\n    <div className=\"App\">\n      <h3>Cadastro de produtos: </h3>\n      {/* <p>{JSON.stringify(ssds)}</p> */}\n      <p>{JSON.stringify(objetoSsd)}</p>\n\n      <Formulario botao={btnCadastrar} eventoTeste={aoDiditar} obj={objetoSsd}  cadastrar={cadastrar} />\n\n      <List vetor={ssds} />\n      {/* <h3>Produtos cadastrados</h3> */}\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,UAAU,MAAM,yBAAyB;AAChD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,SAASC,GAAG,GAAG;EAAA;EAEf;EACA,MAAMC,GAAG,GAAG;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAG,EAAE;IACVC,YAAY,EAAG,EAAE;IACjBC,IAAI,EAAG,EAAE;IACTC,aAAa,EAAE,EAAE;IACjBC,YAAY,EAAG,EAAE;IACjBC,SAAS,EAAG,EAAE;IACdC,WAAW,EAAE;EAEf,CAAC;EACC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAACE,GAAG,CAAC;;EAE/C;EACAH,SAAS,CAAC,MAAM;IACdkB,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,kBAAkB,IAAKP,OAAO,CAACO,kBAAkB,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEV;;EAEA;EACA,MAAMC,SAAS,GAAIC,CAAC,IAAK;IACrBP,YAAY,CAAC;MACX,GAAGD,SAAS;MACZ,CAACQ,CAAC,CAACC,MAAM,CAACrB,KAAK,GAAEoB,CAAC,CAACC,MAAM,CAACC;IAAK,CAAC,CAAC;EACrC,CAAC;EACD;;EAGF,MAAMC,SAAS,GAAG,MAAM;IACtBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBX,KAAK,CAAC,+BAA+B,EAAE;MACrCY,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,SAAS,CAAC;MAC/BkB,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACV;IACF,CAAC,CAAC,CACChB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,kBAAkB,IAAK;MAC5B,IAAIA,kBAAkB,CAACc,QAAQ,KAAKC,SAAS,EAAE;QAC7CC,KAAK,CAAChB,kBAAkB,CAACc,QAAQ,CAAC;MACpC,CAAC,MAAM;QACLG,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAElB,kBAAkB,CAAC,CAAC;QAC9CgB,KAAK,CAAC,iCAAiC,CAAC;QACxCG,gBAAgB,EAAE;MACpB;IACF,CAAC,CAAC;EACN,CAAC;;EAIC;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B,eAE/B;MAAA,UAAIT,IAAI,CAACC,SAAS,CAACjB,SAAS;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eAElC,QAAC,UAAU;MAAC,KAAK,EAAEJ,YAAa;MAAC,WAAW,EAAEW,SAAU;MAAC,GAAG,EAAEP,SAAU;MAAE,SAAS,EAAEW;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAElG,QAAC,IAAI;MAAC,KAAK,EAAEb;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEjB;AAEV;AAAC,GA1EQZ,GAAG;AAAA,KAAHA,GAAG;AA2EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}