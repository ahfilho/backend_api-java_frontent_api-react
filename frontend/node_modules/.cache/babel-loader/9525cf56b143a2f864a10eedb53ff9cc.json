{"ast":null,"code":"var _jsxFileName = \"/home/dinho/backend_site/frontend/src/App.js\";\nimport \"./App.css\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const express = require(\"express\");\n  const mysql = require(\"mysql\");\n  const cors = require(\"cors\");\n  const multer = require(\"multer\");\n\n  // Parse JSON\n  app.use(express.json());\n\n  // Use CORS\n  app.use(cors());\n\n  // Testing response\n  app.get(\"/\", (req, res) => {\n    res.send(\"Hello, server is up.\");\n  });\n  const port = process.env.PORT || 3000;\n  app.listen(port, err => {\n    if (err) throw err;else {\n      console.log(\"Server is running at Port: \" + port);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n// //objeto SSD\n// const ssd = {\n//   brand: '',\n//   model : '',\n//   serialNumber : '',\n//   size : '',\n//   purchasePrice :'',\n//   purchaseDate : '',\n//   saleValue : '',\n//   arrivalDate :''\n\n// }\n// const categoria = {\n//   producoCategoria : ''\n// }\n\n//   // UseState = cria  um objeto de maneira dinâmica\n//   const [btnCadastrar, setBtnCadastrar] = useState(true);\n//   const [ssds, setSsds] = useState([]);\n//   const [objetoSsd, setObjetoSsd] = useState(ssd);   \n//   const [category, setCategoria] = useState();\n\n//   // UseEffect\n//   useEffect(() => {\n//     axios.get(\"http://localhost:9090/ssd/list\")\n//       .then((retorno) => retorno.json())\n//       .then((retorno_convertido) => setSsds(retorno_convertido));\n//   }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n// //pegando os dados do formulário\n\n// //setState\n// const aoDiditar = (e) => {\n//     setObjetoSsd({ ...objetoSsd, [e.target.brand]:e.target.value });\n\n//     console.log(e.target);\n//   }\n\n//   // const eventoCadastrar = () => {\n//   //   //objeto SSD\n//   //   const ssd = {\n//   //     brand: \"\",\n//   //     model: \"\",\n//   //     serialNumber: \"\",\n//   //     size: \"\",\n//   //     purchasePrice: \"\",\n//   //     purchaseDate: \"\",\n//   //     saleValue: \"\",\n//   //     arrivalDate: \"\",\n//   //   };\n\n//   //   const category = {\n//   //     productCategory: \"\"\n//   //   }\n//   //   const urll = \"http://localhost:9090/ssd/new\";\n\n//   //   fetch(urll, {\n//   //     method: \"POST\",\n//   //     body: JSON.stringify(objetoSsd),\n//   //     headers: {\n//   //       \"Content-type\": \"application/json\",\n//   //       Accept: \"application/json\",\n//   //     },\n//   //   })\n//   //     .then((response) => response.json())\n//   //     .then((json) => {\n//   //       console.log(\"JOSOONNN\", json);\n//   //       setSsds(json);\n//   //     })\n//   //     .catch((e) => {\n//   //       console.log(\"e\", e);\n//   //     });\n//   // }\n\n// const cadastrar = () => {\n//   fetch('http://localhost:9090/ssd', {\n//       method:'post',\n//       body:JSON.stringify(objetoSsd),\n//       headers:{\n//         'Content-type':'application/json',\n//         'Accept':'application/json'\n//       }\n//     })\n//     .then(retorno => retorno.json())\n//     .then(retorno_convertido => {\n\n//       if(retorno_convertido.mensagem !== undefined){\n//         alert(retorno_convertido.mensagem);\n//       }else{\n//         setSsds([...ssds, retorno_convertido]);\n//         alert('Produto cadastrado com sucesso!');\n//         // limparFormulario();\n//       }\n\n//     })\n//   }\n\n//   // Retorno\n//   return (\n//     <div className=\"App\">\n//       <h3>Cadastro de produtos: </h3>\n//       <p>{JSON.stringify(ssds)}</p>\n//       <p>{JSON.stringify(objetoSsd)}</p>\n\n//       <Formulario\n//         botao={btnCadastrar}\n//         eventoTeste={aoDiditar}\n//         cadastrar={cadastrar}\n\n//       />\n\n//       <List vetor={ssds} />\n//       {/* <h3>Produtos cadastrados</h3> */}\n//     </div>\n//   );\n// }\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["List","useEffect","useState","axios","App","express","require","mysql","cors","multer","app","use","json","get","req","res","send","port","process","env","PORT","listen","err","console","log"],"sources":["/home/dinho/backend_site/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const express = require(\"express\");\n  const mysql = require(\"mysql\");\n  const cors = require(\"cors\");\n  const multer = require(\"multer\");\n\n  // Parse JSON\n  app.use(express.json());\n\n  // Use CORS\n  app.use(cors());\n\n  // Testing response\n  app.get(\"/\", (req, res) => {\n    res.send(\"Hello, server is up.\");\n  });\n\n  const port = process.env.PORT || 3000;\n  app.listen(port, (err) => {\n    if (err) throw err;\n    else {\n      console.log(\"Server is running at Port: \" + port);\n    }\n  }); \n  return (\n    <div className=\"App\">\n      <List />\n    </div>\n  );\n}\n\n// //objeto SSD\n// const ssd = {\n//   brand: '',\n//   model : '',\n//   serialNumber : '',\n//   size : '',\n//   purchasePrice :'',\n//   purchaseDate : '',\n//   saleValue : '',\n//   arrivalDate :''\n \n// }\n// const categoria = {\n//   producoCategoria : ''\n// }\n\n//   // UseState = cria  um objeto de maneira dinâmica\n//   const [btnCadastrar, setBtnCadastrar] = useState(true);\n//   const [ssds, setSsds] = useState([]);\n//   const [objetoSsd, setObjetoSsd] = useState(ssd);   \n//   const [category, setCategoria] = useState();\n\n\n//   // UseEffect\n//   useEffect(() => {\n//     axios.get(\"http://localhost:9090/ssd/list\")\n//       .then((retorno) => retorno.json())\n//       .then((retorno_convertido) => setSsds(retorno_convertido));\n//   }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n// //pegando os dados do formulário\n\n// //setState\n// const aoDiditar = (e) => {\n//     setObjetoSsd({ ...objetoSsd, [e.target.brand]:e.target.value });\n\n//     console.log(e.target);\n//   }\n \n//   // const eventoCadastrar = () => {\n//   //   //objeto SSD\n//   //   const ssd = {\n//   //     brand: \"\",\n//   //     model: \"\",\n//   //     serialNumber: \"\",\n//   //     size: \"\",\n//   //     purchasePrice: \"\",\n//   //     purchaseDate: \"\",\n//   //     saleValue: \"\",\n//   //     arrivalDate: \"\",\n//   //   };\n\n//   //   const category = {\n//   //     productCategory: \"\"\n//   //   }\n//   //   const urll = \"http://localhost:9090/ssd/new\";\n\n//   //   fetch(urll, {\n//   //     method: \"POST\",\n//   //     body: JSON.stringify(objetoSsd),\n//   //     headers: {\n//   //       \"Content-type\": \"application/json\",\n//   //       Accept: \"application/json\",\n//   //     },\n//   //   })\n//   //     .then((response) => response.json())\n//   //     .then((json) => {\n//   //       console.log(\"JOSOONNN\", json);\n//   //       setSsds(json);\n//   //     })\n//   //     .catch((e) => {\n//   //       console.log(\"e\", e);\n//   //     });\n//   // }\n\n\n\n// const cadastrar = () => {\n//   fetch('http://localhost:9090/ssd', {\n//       method:'post',\n//       body:JSON.stringify(objetoSsd),\n//       headers:{\n//         'Content-type':'application/json',\n//         'Accept':'application/json'\n//       }\n//     })\n//     .then(retorno => retorno.json())\n//     .then(retorno_convertido => {\n      \n//       if(retorno_convertido.mensagem !== undefined){\n//         alert(retorno_convertido.mensagem);\n//       }else{\n//         setSsds([...ssds, retorno_convertido]);\n//         alert('Produto cadastrado com sucesso!');\n//         // limparFormulario();\n//       }\n      \n//     })\n//   }\n\n\n//   // Retorno\n//   return (\n//     <div className=\"App\">\n//       <h3>Cadastro de produtos: </h3>\n//       <p>{JSON.stringify(ssds)}</p>\n//       <p>{JSON.stringify(objetoSsd)}</p>\n\n//       <Formulario\n//         botao={btnCadastrar}\n//         eventoTeste={aoDiditar}\n//         cadastrar={cadastrar}\n        \n//       />\n\n//       <List vetor={ssds} />\n//       {/* <h3>Produtos cadastrados</h3> */}\n//     </div>\n//   );\n// }\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,iBAAiB;AAClC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EACb,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;EAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;EAC9B,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;EAC5B,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;;EAEhC;EACAI,GAAG,CAACC,GAAG,CAACN,OAAO,CAACO,IAAI,EAAE,CAAC;;EAEvB;EACAF,GAAG,CAACC,GAAG,CAACH,IAAI,EAAE,CAAC;;EAEf;EACAE,GAAG,CAACG,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;IACzBA,GAAG,CAACC,IAAI,CAAC,sBAAsB,CAAC;EAClC,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;EACrCV,GAAG,CAACW,MAAM,CAACJ,IAAI,EAAGK,GAAG,IAAK;IACxB,IAAIA,GAAG,EAAE,MAAMA,GAAG,CAAC,KACd;MACHC,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGP,IAAI,CAAC;IACnD;EACF,CAAC,CAAC;EACF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA,KAtJSb,GAAG;AAuJZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}