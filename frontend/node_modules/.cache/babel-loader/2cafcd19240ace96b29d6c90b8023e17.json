{"ast":null,"code":"var _jsxFileName = \"/home/dinho/backend_site/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Formulario from \"./formulario/Formulario\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //objeto SSD\n  const ssd = {\n    brand: '',\n    model: '',\n    serialNumber: '',\n    size: '',\n    purchasePrice: '',\n    purchaseDate: '',\n    saleValue: '',\n    arrivalDate: ''\n  };\n  // UseState = cria  um objeto de maneira dinâmica\n  const [btnCadastrar, setBtnCadastrar] = useState(true);\n  const [ssds, setSsds] = useState([]);\n  const [objetoSsd, setObjetoSsd] = useState(ssd);\n\n  // UseEffect\n  useEffect(() => {\n    fetch(\"http://localhost:9090/ssd/list\").then(retorno => retorno.json()).then(retorno_convertido => setSsds(retorno_convertido));\n  }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n  //pegando os dados do formulário\n\n  const teste = e => {\n    setObjetoSsd({\n      ...objetoSsd,\n      [e.target.brand]: e.target.value,\n      [e.target.model]: e.target.value,\n      [e.target.purchaseDate]: e.target.value,\n      [e.target.purchasePrice]: e.target.value,\n      [e.target.saleValue]: e.target.value,\n      [e.target.serialNumber]: e.target.value,\n      [e.target.size]: e.target.value,\n      [e.target.arrivalDate]: e.target.value\n    }); //para editar o objeto\n  };\n\n  const cadastro = () => {\n    fetch = (\"http://localhost:9090/ssd/\", {\n      method: 'post',\n      body: JSON.stringify(objetoSsd),\n      headers: {\n        'Content-type': 'applcation/json',\n        'Accept': 'application/json'\n      }\n    }).then(retorno = retorno.json()).then(retorno_convertido => {\n      console.log(retorno_convertido);\n    });\n  };\n\n  // Retorno\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cadastro de produtos: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(objetoSsd)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      botao: btnCadastrar,\n      eventoTeste: teste,\n      cadastro: cadastro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      vetor: ssds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DvN44PFu7FRaHnssjiXGRyQWs+U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Formulario","List","useEffect","useState","App","ssd","brand","model","serialNumber","size","purchasePrice","purchaseDate","saleValue","arrivalDate","btnCadastrar","setBtnCadastrar","ssds","setSsds","objetoSsd","setObjetoSsd","fetch","then","retorno","json","retorno_convertido","teste","e","target","value","cadastro","method","body","JSON","stringify","headers","console","log"],"sources":["/home/dinho/backend_site/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Formulario from \"./formulario/Formulario\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\n//objeto SSD\nconst ssd = {\n  brand : '',\n  model :'',\n  serialNumber : '',\n  size : '',\n  purchasePrice :'',\n  purchaseDate : '',\n  saleValue : '',\n  arrivalDate :''\n \n}\n  // UseState = cria  um objeto de maneira dinâmica\n  const [btnCadastrar, setBtnCadastrar] = useState(true);\n  const [ssds, setSsds] = useState([]);\n  const [objetoSsd, setObjetoSsd] = useState(ssd);  \n\n  // UseEffect\n  useEffect(() => {\n    fetch(\"http://localhost:9090/ssd/list\")\n      .then((retorno) => retorno.json())\n      .then((retorno_convertido) => setSsds(retorno_convertido));\n  }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n//pegando os dados do formulário\n\n\nconst teste = (e) => {\n  setObjetoSsd({\n    ...objetoSsd,\n    [e.target.brand]: e.target.value,\n    [e.target.model]: e.target.value,\n    [e.target.purchaseDate]: e.target.value,\n    [e.target.purchasePrice]: e.target.value,\n    [e.target.saleValue]: e.target.value,\n    [e.target.serialNumber]: e.target.value,\n    [e.target.size]: e.target.value,\n    [e.target.arrivalDate]: e.target.value,\n   \n  }); //para editar o objeto\n}\nconst cadastro = () => {\n  fetch = (\"http://localhost:9090/ssd/\",{\n    method:'post',\n    body:JSON.stringify(objetoSsd),\n    headers:{\n      'Content-type':'applcation/json',\n      'Accept':'application/json'\n    }\n  })\n  .then(retorno = retorno.json())\n  .then(retorno_convertido =>{\n    console.log(retorno_convertido);\n  })\n\n}\n\n\n  // Retorno\n  return (\n    <div className=\"App\">\n      <h3>Cadastro de produtos: </h3>\n      {/* <p>{JSON.stringify(ssds)}</p> */}\n      <p>{JSON.stringify(objetoSsd)}</p>\n\n      <Formulario botao={btnCadastrar} eventoTeste={teste} cadastro={cadastro} />\n\n      <List vetor={ssds} />\n      {/* <h3>Produtos cadastrados</h3> */}\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}