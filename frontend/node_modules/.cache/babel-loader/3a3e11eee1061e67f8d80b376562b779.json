{"ast":null,"code":"var _jsxFileName = \"/home/dinho/backend_site/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Formulario from \"./formulario/Formulario\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //objeto SSD\n  const ssd = {\n    brand: '',\n    model: '',\n    serialNumber: '',\n    size: '',\n    purchasePrice: '',\n    purchaseDate: '',\n    saleValue: '',\n    arrivalDate: ''\n  };\n  // UseState = cria  um objeto de maneira dinâmica\n  const [btnCadastrar, setBtnCadastrar] = useState(true);\n  const [ssds, setSsds] = useState([]);\n  const [objetoSsd, setObjetoSsd] = useState(ssd);\n  const [cardFile, setCardFile] = useState();\n  const handleUploadFile = e => setCardFile(e.target.files[0]);\n\n  // UseEffect\n  useEffect(() => {\n    fetch(\"http://localhost:9090/ssd/list\").then(retorno => retorno.json()).then(retorno_convertido => setSsds(retorno_convertido));\n  }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n  //pegando os dados do formulário\n\n  //setState\n  const aoDiditar = e => {\n    setObjetoSsd({\n      ...ssds,\n      [e.target.brand]: e.target.value\n    });\n    console.log(e.target.value);\n  };\n  //para editar o objeto\n\n  const eventoCadastrar = () => {\n    const addNewCard = async () => {\n      setSaving(true);\n      const data = new FormData();\n      data.append(\"card\", cardFile);\n\n      //objeto SSD\n      const ssd = {\n        brand: \"\",\n        model: \"\",\n        serialNumber: \"\",\n        size: \"\",\n        purchasePrice: \"\",\n        purchaseDate: \"\",\n        saleValue: \"\",\n        arrivalDate: \"\"\n      };\n      const urll = \"http://localhost:9090/ssd/new\";\n      fetch(urll, {\n        method: \"POST\",\n        body: JSON.stringify(objetoSsd),\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => response.json()).then(json => {\n        console.log(\"JOSOONNN\", json);\n        setSsds(json);\n      }).catch(e => {\n        console.log(\"e\", e);\n      });\n    };\n  };\n  const cadastrar = () => {\n    //objeto SSD\n    const ssd = {\n      brand: \"\",\n      model: \"\",\n      serialNumber: \"\",\n      size: \"\",\n      purchasePrice: \"\",\n      purchaseDate: \"\",\n      saleValue: \"\",\n      arrivalDate: \"\"\n    };\n    console.log(\"testee\");\n    fetch(\"http://localhost:9090/ssd/new\", {\n      method: \"post\",\n      body: JSON.stringify(objetoSsd),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(retorno => retorno.json()).then(retorno_convertido => {\n      if (retorno_convertido.mensagem !== undefined) {\n        alert(retorno_convertido.mensagem);\n      } else {\n        setSsds([...ssds, retorno_convertido]);\n        alert(\"Produto cadastrado com sucesso!\");\n        // limparFormulario();\n      }\n    });\n  };\n\n  // Retorno\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cadastro de produtos: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      botao: btnCadastrar,\n      eventoTeste: aoDiditar,\n      obj: objetoSsd,\n      cadastrar: eventoCadastrar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      vetor: ssds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HWHKCfdcxDeryPu6akFdgJ4wUSs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Formulario","List","useEffect","useState","App","ssd","brand","model","serialNumber","size","purchasePrice","purchaseDate","saleValue","arrivalDate","btnCadastrar","setBtnCadastrar","ssds","setSsds","objetoSsd","setObjetoSsd","cardFile","setCardFile","handleUploadFile","e","target","files","fetch","then","retorno","json","retorno_convertido","aoDiditar","value","console","log","eventoCadastrar","addNewCard","setSaving","data","FormData","append","urll","method","body","JSON","stringify","headers","Accept","response","catch","cadastrar","mensagem","undefined","alert"],"sources":["/home/dinho/backend_site/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Formulario from \"./formulario/Formulario\";\nimport List from \"./listagem/List\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\n//objeto SSD\nconst ssd = {\n  brand: '',\n  model : '',\n  serialNumber : '',\n  size : '',\n  purchasePrice :'',\n  purchaseDate : '',\n  saleValue : '',\n  arrivalDate :''\n \n}\n  // UseState = cria  um objeto de maneira dinâmica\n  const [btnCadastrar, setBtnCadastrar] = useState(true);\n  \n  const [ssds, setSsds] = useState([]);\n  const [objetoSsd, setObjetoSsd] = useState(ssd);  \n\n\n  const [cardFile, setCardFile] = useState();\n\n  const handleUploadFile = (e) => setCardFile(e.target.files[0]);\n\n  // UseEffect\n  useEffect(() => {\n    fetch(\"http://localhost:9090/ssd/list\")\n      .then((retorno) => retorno.json())\n      .then((retorno_convertido) => setSsds(retorno_convertido));\n  }, []); // as chaves vão permitir fazer apenas uma requisição. Se não tiver, entra em loop.\n\n//pegando os dados do formulário\n\n//setState\nconst aoDiditar = (e) => {\n    setObjetoSsd({...ssds,[e.target.brand]:e.target.value});\n    console.log(e.target.value);\n  }\n  //para editar o objeto\n\n\n  const eventoCadastrar = () => {\n    const addNewCard = async () => {\n  setSaving(true);\n  const data = new FormData();\n  data.append(\"card\", cardFile);\n\n    //objeto SSD\n    const ssd = {\n      brand: \"\",\n      model: \"\",\n      serialNumber: \"\",\n      size: \"\",\n      purchasePrice: \"\",\n      purchaseDate: \"\",\n      saleValue: \"\",\n      arrivalDate: \"\",\n    };\n    const urll = \"http://localhost:9090/ssd/new\";\n\n    fetch(urll, {\n      method: \"POST\",\n      body: JSON.stringify(objetoSsd),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(\"JOSOONNN\", json);\n        setSsds(json);\n      })\n      .catch((e) => {\n        console.log(\"e\", e);\n      });\n  }\n\n  }\n\nconst cadastrar = () => {\n  //objeto SSD\n  const ssd = {\n    brand: \"\",\n    model: \"\",\n    serialNumber: \"\",\n    size: \"\",\n    purchasePrice: \"\",\n    purchaseDate: \"\",\n    saleValue: \"\",\n    arrivalDate: \"\",\n  };\n  console.log(\"testee\");\n  fetch(\"http://localhost:9090/ssd/new\", {\n    method: \"post\",\n    body: JSON.stringify(objetoSsd),\n    headers: {\n      \"Content-type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  })\n    .then((retorno) => retorno.json())\n    .then((retorno_convertido) => {\n      if (retorno_convertido.mensagem !== undefined) {\n        alert(retorno_convertido.mensagem);\n      } else {\n        setSsds([...ssds, retorno_convertido]);\n        alert(\"Produto cadastrado com sucesso!\");\n        // limparFormulario();\n      }\n    });\n};\n\n\n\n  // Retorno\n  return (\n    <div className=\"App\">\n      <h3>Cadastro de produtos: </h3>\n      {/* <p>{JSON.stringify(ssds)}</p> */}\n      {/* <p>{JSON.stringify(objetoSsd)}</p> */}\n\n      <Formulario\n        botao={btnCadastrar}\n        eventoTeste={aoDiditar}\n        obj={objetoSsd}\n        cadastrar={eventoCadastrar}\n      />\n\n      <List vetor={ssds} />\n      {/* <h3>Produtos cadastrados</h3> */}\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}